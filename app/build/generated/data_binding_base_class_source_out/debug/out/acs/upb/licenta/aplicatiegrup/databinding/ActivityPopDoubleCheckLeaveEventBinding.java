// Generated by view binder compiler. Do not edit!
package acs.upb.licenta.aplicatiegrup.databinding;

import acs.upb.licenta.aplicatiegrup.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPopDoubleCheckLeaveEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button no1;

  @NonNull
  public final TextView sure1;

  @NonNull
  public final Button yes1;

  private ActivityPopDoubleCheckLeaveEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button no1, @NonNull TextView sure1, @NonNull Button yes1) {
    this.rootView = rootView;
    this.no1 = no1;
    this.sure1 = sure1;
    this.yes1 = yes1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPopDoubleCheckLeaveEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPopDoubleCheckLeaveEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pop_double_check_leave_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPopDoubleCheckLeaveEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.no1;
      Button no1 = ViewBindings.findChildViewById(rootView, id);
      if (no1 == null) {
        break missingId;
      }

      id = R.id.sure1;
      TextView sure1 = ViewBindings.findChildViewById(rootView, id);
      if (sure1 == null) {
        break missingId;
      }

      id = R.id.yes1;
      Button yes1 = ViewBindings.findChildViewById(rootView, id);
      if (yes1 == null) {
        break missingId;
      }

      return new ActivityPopDoubleCheckLeaveEventBinding((ConstraintLayout) rootView, no1, sure1,
          yes1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
