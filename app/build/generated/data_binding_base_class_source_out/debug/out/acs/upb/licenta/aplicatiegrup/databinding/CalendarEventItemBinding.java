// Generated by view binder compiler. Do not edit!
package acs.upb.licenta.aplicatiegrup.databinding;

import acs.upb.licenta.aplicatiegrup.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CalendarEventItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final TextView eventNameText;

  @NonNull
  public final TextView groupText;

  private CalendarEventItemBinding(@NonNull CardView rootView, @NonNull TextView dateText,
      @NonNull TextView eventNameText, @NonNull TextView groupText) {
    this.rootView = rootView;
    this.dateText = dateText;
    this.eventNameText = eventNameText;
    this.groupText = groupText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CalendarEventItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CalendarEventItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.calendar_event_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CalendarEventItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateText;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      id = R.id.eventNameText;
      TextView eventNameText = ViewBindings.findChildViewById(rootView, id);
      if (eventNameText == null) {
        break missingId;
      }

      id = R.id.groupText;
      TextView groupText = ViewBindings.findChildViewById(rootView, id);
      if (groupText == null) {
        break missingId;
      }

      return new CalendarEventItemBinding((CardView) rootView, dateText, eventNameText, groupText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
