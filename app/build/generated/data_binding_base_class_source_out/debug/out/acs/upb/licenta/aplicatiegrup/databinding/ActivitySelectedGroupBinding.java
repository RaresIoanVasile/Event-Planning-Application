// Generated by view binder compiler. Do not edit!
package acs.upb.licenta.aplicatiegrup.databinding;

import acs.upb.licenta.aplicatiegrup.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectedGroupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backSelectedGroup;

  @NonNull
  public final CardView deleteGroup;

  @NonNull
  public final CardView leaveGroup;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView titleGroup;

  @NonNull
  public final CardView viewGroupCode;

  @NonNull
  public final CardView viewMembers;

  private ActivitySelectedGroupBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backSelectedGroup, @NonNull CardView deleteGroup,
      @NonNull CardView leaveGroup, @NonNull LinearLayout linearLayout,
      @NonNull TextView titleGroup, @NonNull CardView viewGroupCode,
      @NonNull CardView viewMembers) {
    this.rootView = rootView;
    this.backSelectedGroup = backSelectedGroup;
    this.deleteGroup = deleteGroup;
    this.leaveGroup = leaveGroup;
    this.linearLayout = linearLayout;
    this.titleGroup = titleGroup;
    this.viewGroupCode = viewGroupCode;
    this.viewMembers = viewMembers;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectedGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectedGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_selected_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectedGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backSelectedGroup;
      ImageButton backSelectedGroup = ViewBindings.findChildViewById(rootView, id);
      if (backSelectedGroup == null) {
        break missingId;
      }

      id = R.id.deleteGroup;
      CardView deleteGroup = ViewBindings.findChildViewById(rootView, id);
      if (deleteGroup == null) {
        break missingId;
      }

      id = R.id.leaveGroup;
      CardView leaveGroup = ViewBindings.findChildViewById(rootView, id);
      if (leaveGroup == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.titleGroup;
      TextView titleGroup = ViewBindings.findChildViewById(rootView, id);
      if (titleGroup == null) {
        break missingId;
      }

      id = R.id.viewGroupCode;
      CardView viewGroupCode = ViewBindings.findChildViewById(rootView, id);
      if (viewGroupCode == null) {
        break missingId;
      }

      id = R.id.viewMembers;
      CardView viewMembers = ViewBindings.findChildViewById(rootView, id);
      if (viewMembers == null) {
        break missingId;
      }

      return new ActivitySelectedGroupBinding((ConstraintLayout) rootView, backSelectedGroup,
          deleteGroup, leaveGroup, linearLayout, titleGroup, viewGroupCode, viewMembers);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
