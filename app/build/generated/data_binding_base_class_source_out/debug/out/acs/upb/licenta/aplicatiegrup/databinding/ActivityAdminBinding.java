// Generated by view binder compiler. Do not edit!
package acs.upb.licenta.aplicatiegrup.databinding;

import acs.upb.licenta.aplicatiegrup.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView allEventsTextView;

  @NonNull
  public final TextView allGroupsTextView;

  @NonNull
  public final TextView allUsersTextView;

  @NonNull
  public final Button btnAdminEvents;

  @NonNull
  public final Button btnAdminGroups;

  @NonNull
  public final TextView eventsTextView;

  @NonNull
  public final TextView groupsTextView;

  @NonNull
  public final TextView msjTextView;

  @NonNull
  public final TextView pollsTextView;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final RelativeLayout relativeLayout3;

  @NonNull
  public final RelativeLayout relativeLayout4;

  @NonNull
  public final RelativeLayout relativeLayout5;

  @NonNull
  public final RelativeLayout relativeLayout6;

  @NonNull
  public final RelativeLayout relativeLayout7;

  @NonNull
  public final TextView usersTextView;

  private ActivityAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView allEventsTextView, @NonNull TextView allGroupsTextView,
      @NonNull TextView allUsersTextView, @NonNull Button btnAdminEvents,
      @NonNull Button btnAdminGroups, @NonNull TextView eventsTextView,
      @NonNull TextView groupsTextView, @NonNull TextView msjTextView,
      @NonNull TextView pollsTextView, @NonNull RelativeLayout relativeLayout,
      @NonNull RelativeLayout relativeLayout2, @NonNull RelativeLayout relativeLayout3,
      @NonNull RelativeLayout relativeLayout4, @NonNull RelativeLayout relativeLayout5,
      @NonNull RelativeLayout relativeLayout6, @NonNull RelativeLayout relativeLayout7,
      @NonNull TextView usersTextView) {
    this.rootView = rootView;
    this.allEventsTextView = allEventsTextView;
    this.allGroupsTextView = allGroupsTextView;
    this.allUsersTextView = allUsersTextView;
    this.btnAdminEvents = btnAdminEvents;
    this.btnAdminGroups = btnAdminGroups;
    this.eventsTextView = eventsTextView;
    this.groupsTextView = groupsTextView;
    this.msjTextView = msjTextView;
    this.pollsTextView = pollsTextView;
    this.relativeLayout = relativeLayout;
    this.relativeLayout2 = relativeLayout2;
    this.relativeLayout3 = relativeLayout3;
    this.relativeLayout4 = relativeLayout4;
    this.relativeLayout5 = relativeLayout5;
    this.relativeLayout6 = relativeLayout6;
    this.relativeLayout7 = relativeLayout7;
    this.usersTextView = usersTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allEventsTextView;
      TextView allEventsTextView = ViewBindings.findChildViewById(rootView, id);
      if (allEventsTextView == null) {
        break missingId;
      }

      id = R.id.allGroupsTextView;
      TextView allGroupsTextView = ViewBindings.findChildViewById(rootView, id);
      if (allGroupsTextView == null) {
        break missingId;
      }

      id = R.id.allUsersTextView;
      TextView allUsersTextView = ViewBindings.findChildViewById(rootView, id);
      if (allUsersTextView == null) {
        break missingId;
      }

      id = R.id.btnAdminEvents;
      Button btnAdminEvents = ViewBindings.findChildViewById(rootView, id);
      if (btnAdminEvents == null) {
        break missingId;
      }

      id = R.id.btnAdminGroups;
      Button btnAdminGroups = ViewBindings.findChildViewById(rootView, id);
      if (btnAdminGroups == null) {
        break missingId;
      }

      id = R.id.eventsTextView;
      TextView eventsTextView = ViewBindings.findChildViewById(rootView, id);
      if (eventsTextView == null) {
        break missingId;
      }

      id = R.id.groupsTextView;
      TextView groupsTextView = ViewBindings.findChildViewById(rootView, id);
      if (groupsTextView == null) {
        break missingId;
      }

      id = R.id.msjTextView;
      TextView msjTextView = ViewBindings.findChildViewById(rootView, id);
      if (msjTextView == null) {
        break missingId;
      }

      id = R.id.pollsTextView;
      TextView pollsTextView = ViewBindings.findChildViewById(rootView, id);
      if (pollsTextView == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.relativeLayout3;
      RelativeLayout relativeLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout3 == null) {
        break missingId;
      }

      id = R.id.relativeLayout4;
      RelativeLayout relativeLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout4 == null) {
        break missingId;
      }

      id = R.id.relativeLayout5;
      RelativeLayout relativeLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout5 == null) {
        break missingId;
      }

      id = R.id.relativeLayout6;
      RelativeLayout relativeLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout6 == null) {
        break missingId;
      }

      id = R.id.relativeLayout7;
      RelativeLayout relativeLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout7 == null) {
        break missingId;
      }

      id = R.id.usersTextView;
      TextView usersTextView = ViewBindings.findChildViewById(rootView, id);
      if (usersTextView == null) {
        break missingId;
      }

      return new ActivityAdminBinding((ConstraintLayout) rootView, allEventsTextView,
          allGroupsTextView, allUsersTextView, btnAdminEvents, btnAdminGroups, eventsTextView,
          groupsTextView, msjTextView, pollsTextView, relativeLayout, relativeLayout2,
          relativeLayout3, relativeLayout4, relativeLayout5, relativeLayout6, relativeLayout7,
          usersTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
