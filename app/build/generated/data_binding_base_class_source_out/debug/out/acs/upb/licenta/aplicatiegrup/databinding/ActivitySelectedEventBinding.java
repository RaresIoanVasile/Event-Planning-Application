// Generated by view binder compiler. Do not edit!
package acs.upb.licenta.aplicatiegrup.databinding;

import acs.upb.licenta.aplicatiegrup.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectedEventBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backSelectedEvent;

  @NonNull
  public final CardView chatEvent;

  @NonNull
  public final CardView deleteEvent;

  @NonNull
  public final CardView expenseTracker;

  @NonNull
  public final CardView leaveEvent;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final CardView participantsEvent;

  @NonNull
  public final CardView polls;

  @NonNull
  public final CardView shoppingCart;

  @NonNull
  public final CardView taskManager;

  @NonNull
  public final TextView titleEventName;

  private ActivitySelectedEventBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton backSelectedEvent, @NonNull CardView chatEvent,
      @NonNull CardView deleteEvent, @NonNull CardView expenseTracker, @NonNull CardView leaveEvent,
      @NonNull LinearLayout linearLayout, @NonNull CardView participantsEvent,
      @NonNull CardView polls, @NonNull CardView shoppingCart, @NonNull CardView taskManager,
      @NonNull TextView titleEventName) {
    this.rootView = rootView;
    this.backSelectedEvent = backSelectedEvent;
    this.chatEvent = chatEvent;
    this.deleteEvent = deleteEvent;
    this.expenseTracker = expenseTracker;
    this.leaveEvent = leaveEvent;
    this.linearLayout = linearLayout;
    this.participantsEvent = participantsEvent;
    this.polls = polls;
    this.shoppingCart = shoppingCart;
    this.taskManager = taskManager;
    this.titleEventName = titleEventName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectedEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectedEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_selected_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectedEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backSelectedEvent;
      ImageButton backSelectedEvent = ViewBindings.findChildViewById(rootView, id);
      if (backSelectedEvent == null) {
        break missingId;
      }

      id = R.id.chatEvent;
      CardView chatEvent = ViewBindings.findChildViewById(rootView, id);
      if (chatEvent == null) {
        break missingId;
      }

      id = R.id.deleteEvent;
      CardView deleteEvent = ViewBindings.findChildViewById(rootView, id);
      if (deleteEvent == null) {
        break missingId;
      }

      id = R.id.expenseTracker;
      CardView expenseTracker = ViewBindings.findChildViewById(rootView, id);
      if (expenseTracker == null) {
        break missingId;
      }

      id = R.id.leaveEvent;
      CardView leaveEvent = ViewBindings.findChildViewById(rootView, id);
      if (leaveEvent == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.participantsEvent;
      CardView participantsEvent = ViewBindings.findChildViewById(rootView, id);
      if (participantsEvent == null) {
        break missingId;
      }

      id = R.id.polls;
      CardView polls = ViewBindings.findChildViewById(rootView, id);
      if (polls == null) {
        break missingId;
      }

      id = R.id.shoppingCart;
      CardView shoppingCart = ViewBindings.findChildViewById(rootView, id);
      if (shoppingCart == null) {
        break missingId;
      }

      id = R.id.taskManager;
      CardView taskManager = ViewBindings.findChildViewById(rootView, id);
      if (taskManager == null) {
        break missingId;
      }

      id = R.id.titleEventName;
      TextView titleEventName = ViewBindings.findChildViewById(rootView, id);
      if (titleEventName == null) {
        break missingId;
      }

      return new ActivitySelectedEventBinding((ConstraintLayout) rootView, backSelectedEvent,
          chatEvent, deleteEvent, expenseTracker, leaveEvent, linearLayout, participantsEvent,
          polls, shoppingCart, taskManager, titleEventName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
